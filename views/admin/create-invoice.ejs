<%- include('../partials/head.ejs') %>

    <body>

        <%- include('../partials/navbar.ejs') %>

            <main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <!-- Header -->
                <div class="mb-8 animate-slide-up">
                    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center">
                        <div>
                            <h1 class="text-3xl font-bold text-gray-900 mb-2">Create New Invoice</h1>
                            <p class="text-gray-600">Fill in the details below to generate a professional invoice.</p>
                        </div>
                        <div class="mt-4 sm:mt-0 flex space-x-3">
                            <button
                                class="bg-white border border-gray-300 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-50 transition-colors duration-200 shadow-sm">
                                Save as Draft
                            </button>
                            <button
                                class="bg-gray-100 text-gray-600 px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-200 transition-colors duration-200">
                                Preview
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Form -->
                <form id="invoiceForm" class="space-y-8 animate-scale-in">
                    <!-- Invoice Details Section -->
                    <div class="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
                            <div
                                class="w-8 h-8 bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mr-3">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">
                                    </path>
                                </svg>
                            </div>
                            Invoice Details
                        </h2>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Invoice Number</label>
                                <input type="text" id="invoiceNumber" value="Auto-generated"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50"
                                    readonly>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Issue Date *</label>
                                <input type="date" id="issueDate" name="issueDate"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                                    required>
                            </div>
                        </div>
                    </div>

                    <!-- Business Info / Client Section -->
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <!-- Krushiyuga Business Info (Display Only) -->
                        <div class="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
                            <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
                                <div
                                    class="w-8 h-8 bg-gradient-to-r from-green-500 to-green-600 rounded-lg flex items-center justify-center mr-3">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor"
                                        viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4">
                                        </path>
                                    </svg>
                                </div>
                                From (Business Details)
                            </h2>

                            <div class="space-y-4 bg-gray-50 p-4 rounded-lg">
                                <div>
                                    <h3 class="text-lg font-bold text-green-700">Krushiyuga</h3>
                                    <p class="text-sm text-gray-600 font-medium">GSTIN: 22AAAAA0000A1Z5</p>
                                    <p class="text-sm text-gray-700 mt-1">Agricultural Solutions & Services</p>
                                </div>
                                <div>
                                    <p class="text-sm text-gray-700 leading-relaxed">
                                        No. 39 & 1479, DRLS Plaza Union Bank Building<br>
                                        Tumkur Road, Vidya Nagar, T. Dasarahalli<br>
                                        Bengaluru 560057
                                    </p>
                                </div>
                                <div class="flex flex-col space-y-1">
                                    <p class="text-sm text-gray-700">
                                        <i class="fas fa-phone text-green-600 mr-2"></i>
                                        <span class="font-medium">Mobile:</span> 9876543210
                                    </p>
                                    <p class="text-sm text-gray-700">
                                        <i class="fas fa-envelope text-green-600 mr-2"></i>
                                        <span class="font-medium">Email:</span> info@krushiyuga.com
                                    </p>
                                </div>
                            </div>
                        </div>

                        <!-- Bill To (Client) -->
                        <div class="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
                            <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
                                <div
                                    class="w-8 h-8 bg-gradient-to-r from-purple-500 to-purple-600 rounded-lg flex items-center justify-center mr-3">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor"
                                        viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z">
                                        </path>
                                    </svg>
                                </div>
                                Bill To (Client)
                            </h2>

                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Client Company *</label>
                                    <input type="text" id="toCompany" name="toCompany" placeholder="Client Company Name"
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                                        required>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Contact Person</label>
                                    <input type="text" id="toContact" name="toContact" placeholder="Client Name"
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Client GSTIN</label>
                                    <input type="text" id="toGstin" name="toGstin" placeholder="22AAAAA0000A1Z5"
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                                    <input type="email" id="toEmail" name="toEmail" placeholder="client@company.com"
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                                        required>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Phone</label>
                                    <input type="tel" id="toPhone" name="toPhone" placeholder="+91 9876543210"
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Address *</label>
                                    <textarea id="toAddress" name="toAddress" rows="3"
                                        placeholder="Client company address..."
                                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none"
                                        required></textarea>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Items Section -->
                    <div class="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
                        <div class="flex justify-between items-center mb-6">
                            <h2 class="text-xl font-semibold text-gray-900 flex items-center">
                                <div
                                    class="w-8 h-8 bg-gradient-to-r from-indigo-500 to-indigo-600 rounded-lg flex items-center justify-center mr-3">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor"
                                        viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01">
                                        </path>
                                    </svg>
                                </div>
                                Invoice Items
                            </h2>
                            <button type="button" id="addItemBtn"
                                class="bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 shadow-lg hover:shadow-xl flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Add Item
                            </button>
                        </div>

                        <!-- Items Table -->
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead class="bg-gray-50 border-b border-gray-200">
                                    <tr>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Product</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Description</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-20">
                                            HSN</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-24">
                                            Quantity</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-20">
                                            Unit</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
                                            Rate (₹)</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-20">
                                            GST%</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
                                            Amount (₹)</th>
                                        <th
                                            class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-16">
                                            Action</th>
                                    </tr>
                                </thead>
                                <tbody id="itemsTableBody" class="bg-white divide-y divide-gray-200">
                                    <!-- Items will be added dynamically -->
                                </tbody>
                            </table>
                        </div>

                        <!-- Totals Section -->
                        <div class="mt-6 border-t border-gray-200 pt-6">
                            <div class="flex justify-end">
                                <div class="w-full max-w-sm space-y-3">
                                    <div class="flex justify-between items-center text-sm">
                                        <span class="text-gray-600">Subtotal:</span>
                                        <span id="subtotal" class="font-medium">₹0.00</span>
                                    </div>
                                    <div class="flex justify-between items-center text-sm">
                                        <span class="text-gray-600">Total GST:</span>
                                        <span id="gstAmount" class="font-medium">₹0.00</span>
                                    </div>
                                    <div class="flex justify-between items-center">
                                        <label class="text-sm text-gray-600">Discount (%):</label>
                                        <div class="flex items-center space-x-2">
                                            <input type="number" id="discountRate" min="0" max="100" step="0.01"
                                                placeholder="0"
                                                class="w-20 px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                                            <span id="discountAmount"
                                                class="text-sm font-medium min-w-16 text-red-600">-₹0.00</span>
                                        </div>
                                    </div>
                                    <div class="border-t border-gray-200 pt-3">
                                        <div class="flex justify-between items-center">
                                            <span class="text-lg font-semibold text-gray-900">Total Amount:</span>
                                            <span id="totalAmount"
                                                class="text-2xl font-bold text-indigo-600">₹0.00</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Additional Notes -->
                    <div class="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
                            <div
                                class="w-8 h-8 bg-gradient-to-r from-yellow-500 to-yellow-600 rounded-lg flex items-center justify-center mr-3">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z">
                                    </path>
                                </svg>
                            </div>
                            Additional Information
                        </h2>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Payment Terms</label>
                                <select id="paymentTerms"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                                    <option value="Net 30">Net 30 days</option>
                                    <option value="Net 15">Net 15 days</option>
                                    <option value="Net 7">Net 7 days</option>
                                    <option value="Due on receipt">Due on receipt</option>
                                    <option value="Advance Payment">Advance Payment</option>
                                    <option value="50% Advance">50% Advance</option>
                                    <option value="Custom">Custom terms</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Currency</label>
                                <select id="currency"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200">
                                    <option value="INR">INR (₹)</option>
                                    <option value="USD">USD ($)</option>
                                    <option value="EUR">EUR (€)</option>
                                    <option value="GBP">GBP (£)</option>
                                </select>
                            </div>
                        </div>
                        <option value="INR">INR (₹)</option>
                        <option value="CAD">CAD (C$)</option>
                        </select>
                    </div>
                    </div>

                    <div class="mt-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Notes</label>
                        <textarea id="notes" rows="4"
                            placeholder="Thank you for your business! Payment is due within 30 days of invoice date."
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none"></textarea>
                    </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex flex-col sm:flex-row justify-end space-y-3 sm:space-y-0 sm:space-x-4">
                        <button type="button"
                            class="w-full sm:w-auto bg-gray-100 hover:bg-gray-200 text-gray-700 px-8 py-3 rounded-lg font-medium transition-colors duration-200">
                            Save as Draft
                        </button>
                        <button type="button"
                            class="w-full sm:w-auto bg-white border-2 border-blue-600 text-blue-600 hover:bg-blue-50 px-8 py-3 rounded-lg font-medium transition-all duration-200">
                            Preview Invoice
                        </button>
                        <button type="submit"
                            class="w-full sm:w-auto bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white px-8 py-3 rounded-lg font-medium transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
                            Create Invoice
                        </button>
                    </div>
                </form>
            </main>
            </form>

            <script>
                // Product data and invoice functionality
                let products = [];
                let itemCounter = 0;

                // Fetch products when page loads
                document.addEventListener('DOMContentLoaded', function () {
                    fetchProducts().then(() => {
                        // Add first item row after products are loaded
                        if (products.length > 0) {
                            console.log('Adding first item row with', products.length, 'products');
                            addItemRow();
                        } else {
                            console.warn('No products available to add to invoice');
                            showNotification('No products found. Please add products first.', 'warning');
                        }
                    });
                });

                // Fetch products from API
                async function fetchProducts() {
                    try {
                        const response = await fetch('/api/products');

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        const data = await response.json();

                        if (data.success && data.products) {
                            products = data.products;
                            console.log('Products loaded successfully:', products.length);
                            console.log('Sample product data:', products[0]); // Debug first product
                        } else {
                            throw new Error('Invalid response format');
                        }
                    } catch (error) {
                        console.error('Error fetching products:', error);
                        showNotification('Error loading products. Please refresh the page.', 'error');
                        products = []; // Ensure products is an array
                    }
                }                // Add item row
                document.getElementById('addItemBtn').addEventListener('click', function () {
                    addItemRow();
                });

                function addItemRow() {
                    itemCounter++;
                    const tbody = document.getElementById('itemsTableBody');

                    const row = document.createElement('tr');
                    row.classList.add('hover:bg-gray-50', 'transition-colors');
                    row.setAttribute('data-item-id', itemCounter);

                    row.innerHTML = `
                    <td class="px-4 py-3">
                        <select class="product-select w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                                onchange="populateProductDetails(this, ${itemCounter})">
                            <option value="">Select Product</option>
                            ${products.map(product =>
                        `<option value="${product._id}" 
                                        data-name="${product.name}"
                                        data-description="${product.description}"
                                        data-hsn="${product.hsn || ''}"
                                        data-unit="${product.unit}"
                                        data-price="${product.price}"
                                        data-gst="${product.gst}">
                                    ${product.name} (₹${product.price})
                                </option>`
                    ).join('')}
                        </select>
                    </td>
                    <td class="px-4 py-3">
                        <input type="text" class="item-description w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="Product description" readonly>
                    </td>
                    <td class="px-4 py-3">
                        <input type="text" class="item-hsn w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="HSN" readonly>
                    </td>
                    <td class="px-4 py-3">
                        <input type="number" class="item-quantity w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="1" min="1" step="0.01" onchange="calculateRowTotal(${itemCounter})">
                    </td>
                    <td class="px-4 py-3">
                        <input type="text" class="item-unit w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="Unit" readonly>
                    </td>
                    <td class="px-4 py-3">
                        <input type="number" class="item-rate w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="0.00" step="0.01" onchange="calculateRowTotal(${itemCounter})">
                    </td>
                    <td class="px-4 py-3">
                        <input type="number" class="item-gst w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="18" step="0.01" readonly>
                    </td>
                    <td class="px-4 py-3">
                        <span class="item-amount font-medium">₹0.00</span>
                    </td>
                    <td class="px-4 py-3">
                        <button type="button" onclick="removeItemRow(${itemCounter})" 
                                class="text-red-600 hover:text-red-800 hover:bg-red-50 p-2 rounded-lg transition-colors">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </td>
                `;

                    tbody.appendChild(row);
                }

                // Populate product details when product is selected
                function populateProductDetails(selectElement, itemId) {
                    const option = selectElement.selectedOptions[0];
                    const row = document.querySelector(`tr[data-item-id="${itemId}"]`);

                    if (option.value && row) {
                        console.log('Populating product details for:', option.getAttribute('data-name'));
                        console.log('Product data:', {
                            description: option.getAttribute('data-description'),
                            hsn: option.getAttribute('data-hsn'),
                            unit: option.getAttribute('data-unit'),
                            price: option.getAttribute('data-price'),
                            gst: option.getAttribute('data-gst')
                        });

                        row.querySelector('.item-description').value = option.getAttribute('data-description') || option.getAttribute('data-name');
                        row.querySelector('.item-hsn').value = option.getAttribute('data-hsn') || '';
                        row.querySelector('.item-unit').value = option.getAttribute('data-unit') || '';
                        row.querySelector('.item-rate').value = option.getAttribute('data-price') || '0';
                        row.querySelector('.item-gst').value = option.getAttribute('data-gst') || '18';
                        row.querySelector('.item-quantity').value = '1';

                        calculateRowTotal(itemId);
                    } else if (row) {
                        // Clear fields if no product selected
                        row.querySelector('.item-description').value = '';
                        row.querySelector('.item-hsn').value = '';
                        row.querySelector('.item-unit').value = '';
                        row.querySelector('.item-rate').value = '';
                        row.querySelector('.item-gst').value = '';
                        row.querySelector('.item-quantity').value = '';
                        row.querySelector('.item-amount').textContent = '₹0.00';

                        calculateTotals();
                    }
                }

                // Calculate row total
                function calculateRowTotal(itemId) {
                    const row = document.querySelector(`tr[data-item-id="${itemId}"]`);
                    if (!row) return;

                    const quantity = parseFloat(row.querySelector('.item-quantity').value) || 0;
                    const rate = parseFloat(row.querySelector('.item-rate').value) || 0;
                    const gstRate = parseFloat(row.querySelector('.item-gst').value) || 0;

                    const subtotal = quantity * rate;
                    const gstAmount = subtotal * (gstRate / 100);
                    const total = subtotal + gstAmount;

                    row.querySelector('.item-amount').textContent = `₹${total.toFixed(2)}`;

                    calculateTotals();
                }

                // Calculate overall totals
                function calculateTotals() {
                    let subtotal = 0;
                    let totalGst = 0;

                    const rows = document.querySelectorAll('#itemsTableBody tr');
                    rows.forEach(row => {
                        const quantity = parseFloat(row.querySelector('.item-quantity').value) || 0;
                        const rate = parseFloat(row.querySelector('.item-rate').value) || 0;
                        const gstRate = parseFloat(row.querySelector('.item-gst').value) || 0;

                        const itemSubtotal = quantity * rate;
                        const itemGst = itemSubtotal * (gstRate / 100);

                        subtotal += itemSubtotal;
                        totalGst += itemGst;
                    });

                    const discountRate = parseFloat(document.getElementById('discountRate').value) || 0;
                    const discountAmount = subtotal * (discountRate / 100);
                    const finalTotal = subtotal + totalGst - discountAmount;

                    document.getElementById('subtotal').textContent = `₹${subtotal.toFixed(2)}`;
                    document.getElementById('gstAmount').textContent = `₹${totalGst.toFixed(2)}`;
                    document.getElementById('discountAmount').textContent = `-₹${discountAmount.toFixed(2)}`;
                    document.getElementById('totalAmount').textContent = `₹${finalTotal.toFixed(2)}`;
                }

                // Remove item row
                function removeItemRow(itemId) {
                    const row = document.querySelector(`tr[data-item-id="${itemId}"]`);
                    if (row) {
                        row.remove();
                        calculateTotals();
                    }
                }

                // Update totals when discount changes
                document.getElementById('discountRate').addEventListener('input', calculateTotals);

                // Show notification
                function showNotification(message, type = 'info') {
                    // Create notification element
                    const notification = document.createElement('div');
                    notification.className = `fixed top-4 right-4 p-4 rounded-lg text-white z-50 ${type === 'error' ? 'bg-red-500' : type === 'success' ? 'bg-green-500' : type === 'warning' ? 'bg-yellow-500' : 'bg-blue-500'
                        }`;
                    notification.textContent = message;

                    document.body.appendChild(notification);

                    setTimeout(() => {
                        notification.remove();
                    }, 3000);
                }
            </script>
    </body>

    </html>